service: curso-node-serverless
frameworkVersion: '3'

params:
  default:
    dbName: *****
    salt: *****
    jwt_secret: *****
    s3_access_key: *****
    s3_secret_key: *****
    s3_endpoint: *****
    
  dev:
    connectionString: *****

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    MONGODB_CONNECTIONSTRING: ${param:connectionString}
    MONGODB_DB_NAME: ${param:dbName}
    SALT: ${param:salt}
    JWT_SECRET: ${param:jwt_secret}
    S3_ACCESS_KEY: ${param:s3_access_key}
    S3_SECRET_KEY: ${param:s3_secret_key}
    S3_ENDPOINT: ${param:s3_endpoint}

plugins:
  - serverless-offline
  - serverless-s3-local
	
resources:
  Resources:
    NewResource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: students-bucket

functions:
  api:
    handler: index.handler
    events:
      - httpApi:
          path: /
          method: get
  login:
    handler: /api/handlers.login
    events:
      - httpApi:
          path: /login
          method: post
          request:
            schemas:
              application/json: ${file(./schemas/login.json)}
  sendResults:
    handler: /api/handlers.sendResults
    events:
      - httpApi:
          path: /send-results
          method: post
          request:
            schemas:
              application/json: ${file(./schemas/sendResponse.json)}
  getResult:
    handler: /api/handlers.getResult
    events:
      - httpApi:
          path: /result/{id}
          method: get
  uploadStudents:
    handler: /api/handlers.uploadStudents
    events:
      - httpApi:
          path: /upload-students
          method: post
  hookStudent:
    handler: /api/handlers.hookStudent
    events:
      - s3:
          bucket: students-bucket
          event: s3:*

